{"version":3,"sources":["components/Buttons.js","components/Presets.js","components/Random.js","components/Speed.js","components/Canvas.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","props","react_default","a","createElement","className","onClick","onClickStart","onClickStop","onClickClear","Presets","onClickPreset1","onClickClearPreset1","onClickPreset2","onClickClearPreset2","onClickPreset3","onClickClearPreset3","onClickPresetSave","Random","onClickRandom","Speed","onSubmit","onUpdateHandler","type","name","onChange","inputHandler","placeholder","autocomplete","value","tempSpeed","Canvas","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getPixel","imageData","x","y","w","width","h","height","index","data","slice","mouseDown","e","preventDefault","setState","clientX","clientY","setTimeout","cellChange","state","start","canvas","refs","ctx","getContext","mousePos","rect","getBoundingClientRect","left","top","getSquare","mousePosX","mousePosY","console","log","getImageData","pixelRGBA","clearRect","emptySquare","fillStyle","fillRect","fillSquare","speed","timer","setInterval","clearInterval","startFunction","xCheck","yCheck","generationNumber","countGen","presetBuild","push","preset1","preset2","preset3","map","cell","random","Math","defineProperty","target","nextGenDies","nextGenLives","neighbor1","neighbor2","neighbor3","neighbor4","neighbor5","neighbor6","neighbor7","neighbor8","count","neighbor11","neighbor22","neighbor33","neighbor44","neighbor55","neighbor66","neighbor77","neighbor88","count2","nextGeneration","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","ref","href","Component","App","pixels","Canvas_Canvas","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d6ab5db.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nexport default function Buttons(props) {\r\n  return (\r\n      <div className=\"buttons-body\">\r\n    <div className=\"buttons\">\r\n          <button onClick={props.onClickStart}>\r\n            Start\r\n          </button>\r\n    </div>\r\n    <div className=\"buttons\">\r\n          <button onClick={props.onClickStop}>\r\n            Stop\r\n          </button>\r\n    </div>\r\n    <div className=\"buttons\">\r\n          <button onClick={props.onClickClear}>\r\n            Clear\r\n          </button>\r\n    </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function Presets(props) {\r\n  return (\r\n      <div className=\"presets-body\">\r\n    <div className=\"preset-group1\">\r\n        <div className=\"presets\">\r\n            <button onClick={props.onClickPreset1}>\r\n                Preset 1\r\n            </button>\r\n        </div>\r\n        <div className=\"presets\">\r\n            <button onClick={props.onClickClearPreset1}>\r\n                Clear Preset 1\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div className=\"preset-group2\">\r\n        <div className=\"presets\">\r\n            <button onClick={props.onClickPreset2}>\r\n                Preset 2\r\n            </button>\r\n        </div>\r\n        <div className=\"presets\">\r\n            <button onClick={props.onClickClearPreset2}>\r\n                Clear Preset 2\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div className=\"preset-group3\">\r\n        <div className=\"presets\">\r\n            <button onClick={props.onClickPreset3}>\r\n                Preset 3\r\n            </button>\r\n        </div>\r\n        <div className=\"presets\">\r\n            <button onClick={props.onClickClearPreset3}>\r\n                Clear Preset 3\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <div className=\"preset-group4\">\r\n        <div className=\"presets\">\r\n            <button onClick={props.onClickPresetSave}>\r\n                Save Preset\r\n            </button>\r\n        </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function Random(props) {\r\n  return (\r\n    <div>\r\n        <div>\r\n            <button \r\n                onClick={props.onClickRandom}>\r\n                Random\r\n            </button>\r\n        </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function Speed(props) {\r\n  return (\r\n      <div>\r\n    <div className=\"speed-body\">\r\n        <form onSubmit={props.onUpdateHandler}>\r\n            <input \r\n                type=\"number\"\r\n                className=\"speed-input\"\r\n                name=\"tempSpeed\"\r\n                onChange={props.inputHandler}\r\n                placeholder=\"Speed in Milleseconds\"\r\n                autocomplete=\"off\"\r\n                value={props.tempSpeed}\r\n                />\r\n            <button>\r\n                Enter\r\n            </button>\r\n        </form>\r\n    </div>\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport Buttons from \"./Buttons\";\r\nimport Presets from \"./Presets\";\r\nimport Random from \"./Random\";\r\nimport Speed from \"./Speed\";\r\n\r\nexport default class Canvas extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      x: 0,\r\n      y: 0,\r\n      start: 0,\r\n      generationNumber: 0,\r\n      presetBuild: null,\r\n      preset1: null,\r\n      preset2: null,\r\n      preset3: null,\r\n      random: null,\r\n      tempSpeed: null,\r\n      speed: 1000\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = \"white\";\r\n    ctx.beginPath();\r\n    for (let x = 0; x < 1005; x += 5) {\r\n      ctx.moveTo(x, 0);\r\n      ctx.lineTo(x, 1005);\r\n      ctx.stroke();\r\n    }\r\n\r\n    for (let y = 0; y < 1005; y += 5) {\r\n      ctx.moveTo(0, y);\r\n      ctx.lineTo(1005, y);\r\n      ctx.stroke();\r\n    }\r\n    ctx.closePath();\r\n\r\n  }\r\n\r\n  getPixel = (imageData, x, y) => {\r\n    const w = imageData.width;\r\n    const h = imageData.height;\r\n    if (x < 0 || x >= w || y < 0 || y >= h) {\r\n      return null;\r\n    }\r\n    const index = (w * y + x) * 4;\r\n    return imageData.data.slice(index, index + 4);\r\n  };\r\n\r\n  mouseDown = e => {\r\n    e.preventDefault();\r\n    this.setState({ x: e.clientX, y: e.clientY });\r\n    setTimeout(() => {\r\n      this.cellChange();\r\n    }, 50);\r\n  };\r\n\r\n  cellChange = () => {\r\n    if (this.state.start === 1) {\r\n      return null;\r\n    }\r\n    let x = this.state.x;\r\n    let y = this.state.y;\r\n\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    function getSquare(canvas, x, y) {\r\n      var rect = canvas.getBoundingClientRect();\r\n      return {\r\n        x: 1 + (x - rect.left) - ((x - rect.left)%5),\r\n        y: 1 + (y - rect.top) - ((y - rect.top)%5)\r\n      };\r\n    }\r\n\r\n    var mousePos = getSquare(canvas, x, y);\r\n\r\n    function fillSquare(ctx, x, y) {\r\n      ctx.fillStyle = \"blue\";\r\n      ctx.fillRect(x, y, 3, 3);\r\n    }\r\n\r\n    function emptySquare(ctx, x, y) {\r\n      ctx.clearRect(x, y, 3, 3);\r\n    }\r\n\r\n    let mousePosX = mousePos.x;\r\n    let mousePosY = mousePos.y;\r\n\r\n    console.log(\"mouse x and y\", mousePosX, mousePosY);\r\n\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    const pixelRGBA = this.getPixel(imageData, mousePosX, mousePosY);\r\n\r\n    if (pixelRGBA !== null && pixelRGBA[2] === 255) {\r\n      emptySquare(ctx, mousePosX, mousePosY);\r\n    } else {\r\n      fillSquare(ctx, mousePosX, mousePosY);\r\n    }\r\n  };\r\n\r\n  onClickStart = () => {\r\n    this.setState({ start: 1 });\r\n    let speed = this.state.speed;\r\n\r\n    let timer = setInterval(() => {\r\n        if(this.state.start === 0) {\r\n            clearInterval(timer)\r\n        } else if(this.state.start === 1) {\r\n            this.startFunction();\r\n        }\r\n    }, speed);\r\n  };\r\n\r\n  onClickStop = () => {\r\n    this.setState({ start: 0 });\r\n  };\r\n\r\n  onClickClear = () => {\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n    function emptySquare(ctx, x, y) {\r\n      ctx.clearRect(x, y, 3, 3);\r\n    }\r\n\r\n    for (let xCheck = 1; xCheck <= 996; xCheck += 5) {\r\n      for (let yCheck = 1; yCheck <= 996; yCheck += 5) {\r\n        let pixelCheck = this.getPixel(imageData, xCheck, yCheck);\r\n        if (pixelCheck[2] === 255) {\r\n          emptySquare(ctx, xCheck, yCheck);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ start: 0, generationNumber: 0, speed: 0});\r\n  };\r\n\r\n  countGen = () => {\r\n    this.setState({ generationNumber: this.state.generationNumber + 1 });\r\n  };\r\n\r\n  onClickPresetSave = () => {\r\n    let presetBuild = [];\r\n\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n    for (let xCheck = 1; xCheck <= 996; xCheck += 5) {\r\n      for (let yCheck = 1; yCheck <= 996; yCheck += 5) {\r\n        let pixelCheck = this.getPixel(imageData, xCheck, yCheck);\r\n        if (pixelCheck[2] === 255) {\r\n          presetBuild.push({ x: xCheck, y: yCheck });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ presetBuild: presetBuild });\r\n\r\n    setTimeout(() => {\r\n      if (this.state.preset1 === null) {\r\n        this.setState({ preset1: this.state.presetBuild });\r\n      } else if (this.state.preset2 === null) {\r\n        this.setState({ preset2: this.state.presetBuild });\r\n      } else if (this.state.preset3 === null) {\r\n        this.setState({ preset3: this.state.presetBuild });\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  onClickPreset1 = () => {\r\n    if (this.state.preset1 === null) {\r\n      return null;\r\n    }\r\n\r\n    this.onClickStop();\r\n    this.onClickClear();\r\n\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    this.state.preset1.map(cell => {\r\n      ctx.fillStyle = \"blue\";\r\n      ctx.fillRect(cell.x, cell.y, 3, 3);\r\n    });\r\n  };\r\n\r\n  onClickPreset2 = () => {\r\n    if (this.state.preset2 === null) {\r\n      return null;\r\n    }\r\n\r\n    this.onClickStop();\r\n    this.onClickClear();\r\n\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    this.state.preset2.map(cell => {\r\n      ctx.fillStyle = \"blue\";\r\n      ctx.fillRect(cell.x, cell.y, 3, 3);\r\n    });\r\n  };\r\n\r\n  onClickPreset3 = () => {\r\n    if (this.state.preset3 === null) {\r\n      return null;\r\n    }\r\n\r\n    this.onClickStop();\r\n    this.onClickClear();\r\n\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    this.state.preset3.map(cell => {\r\n      ctx.fillStyle = \"blue\";\r\n      ctx.fillRect(cell.x, cell.y, 3, 3);\r\n    });\r\n  };\r\n\r\n  onClickClearPreset1 = () => {\r\n    this.setState({ preset1: null });\r\n  };\r\n\r\n  onClickClearPreset2 = () => {\r\n    this.setState({ preset2: null });\r\n  };\r\n\r\n  onClickClearPreset3 = () => {\r\n    this.setState({ preset3: null });\r\n  };\r\n\r\n  onClickRandom = () => {\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    let random = [];\r\n\r\n    for (let xCheck = 1; xCheck <= 996; xCheck += 5) {\r\n      for (let yCheck = 1; yCheck <= 996; yCheck += 5) {\r\n        let randomNumber = Math.random();\r\n        if (randomNumber > 0.5) {\r\n          random.push({ x: xCheck, y: yCheck });\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ random: random });\r\n\r\n    setTimeout(() => {\r\n      this.onClickStop();\r\n      this.onClickClear();\r\n\r\n      this.setState({speed: 1000});\r\n\r\n      const canvas = this.refs.canvas;\r\n      const ctx = canvas.getContext(\"2d\");\r\n\r\n      this.state.random.map(cell => {\r\n        ctx.fillStyle = \"blue\";\r\n        ctx.fillRect(cell.x, cell.y, 3, 3);\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  inputHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onUpdateHandler = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ speed: this.state.tempSpeed, tempSpeed: 0 });\r\n  };\r\n\r\n  startFunction = () => {\r\n    const canvas = this.refs.canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n\r\n    if (this.state.start === 1) {\r\n      setTimeout(() => {\r\n        this.countGen();\r\n      }, 50);\r\n\r\n      let nextGenDies = [];\r\n      let nextGenLives = [];\r\n\r\n      for (let xCheck = 1; xCheck <= 996; xCheck += 5) {\r\n        for (let yCheck = 1; yCheck <= 996; yCheck += 5) {\r\n          let pixelCheck = this.getPixel(imageData, xCheck, yCheck);\r\n          if (pixelCheck[2] === 255) {\r\n            let neighbor1 = this.getPixel(imageData, xCheck - 5, yCheck - 5);\r\n            let neighbor2 = this.getPixel(imageData, xCheck, yCheck - 5);\r\n            let neighbor3 = this.getPixel(imageData, xCheck + 5, yCheck - 5);\r\n            let neighbor4 = this.getPixel(imageData, xCheck + 5, yCheck);\r\n            let neighbor5 = this.getPixel(imageData, xCheck + 5, yCheck + 5);\r\n            let neighbor6 = this.getPixel(imageData, xCheck, yCheck + 5);\r\n            let neighbor7 = this.getPixel(imageData, xCheck - 5, yCheck + 5);\r\n            let neighbor8 = this.getPixel(imageData, xCheck - 5, yCheck);\r\n\r\n            let count = 0;\r\n\r\n            if (neighbor1 !== null) {\r\n              if (neighbor1[2] === 255) {\r\n                count = count + 1;\r\n              }\r\n            }\r\n            if (neighbor2 !== null) {\r\n              if (neighbor2[2] === 255) {\r\n                count = count + 1;\r\n              }\r\n            }\r\n            if (neighbor3 !== null) {\r\n              if (neighbor3[2] === 255) {\r\n                count = count + 1;\r\n              }\r\n            }\r\n            if (neighbor4 !== null) {\r\n              if (neighbor4[2] === 255) {\r\n                count = count + 1;\r\n              }\r\n            }\r\n            if (neighbor5 !== null) {\r\n              if (neighbor5[2] === 255) {\r\n                count = count + 1;\r\n              }\r\n            }\r\n            if (neighbor6 !== null) {\r\n              if (neighbor6[2] === 255) {\r\n                count = count + 1;\r\n              }\r\n            }\r\n            if (neighbor7 !== null) {\r\n              if (neighbor7[2] === 255) {\r\n                count = count + 1;\r\n              }\r\n            }\r\n            if (neighbor8 !== null) {\r\n              if (neighbor8[2] === 255) {\r\n                count = count + 1;\r\n              }\r\n            }\r\n\r\n            if (count < 2 || count > 3) {\r\n              nextGenDies.push({ x: xCheck, y: yCheck });\r\n            }\r\n          } else {\r\n            let neighbor11 = this.getPixel(imageData, xCheck - 5, yCheck - 5);\r\n            let neighbor22 = this.getPixel(imageData, xCheck, yCheck - 5);\r\n            let neighbor33 = this.getPixel(imageData, xCheck + 5, yCheck - 5);\r\n            let neighbor44 = this.getPixel(imageData, xCheck + 5, yCheck);\r\n            let neighbor55 = this.getPixel(imageData, xCheck + 5, yCheck + 5);\r\n            let neighbor66 = this.getPixel(imageData, xCheck, yCheck + 5);\r\n            let neighbor77 = this.getPixel(imageData, xCheck - 5, yCheck + 5);\r\n            let neighbor88 = this.getPixel(imageData, xCheck - 5, yCheck);\r\n\r\n            let count2 = 0;\r\n\r\n            if (neighbor11 !== null) {\r\n              if (neighbor11[2] === 255) {\r\n                count2 = count2 + 1;\r\n              }\r\n            }\r\n            if (neighbor22 !== null) {\r\n              if (neighbor22[2] === 255) {\r\n                count2 = count2 + 1;\r\n              }\r\n            }\r\n            if (neighbor33 !== null) {\r\n              if (neighbor33[2] === 255) {\r\n                count2 = count2 + 1;\r\n              }\r\n            }\r\n            if (neighbor44 !== null) {\r\n              if (neighbor44[2] === 255) {\r\n                count2 = count2 + 1;\r\n              }\r\n            }\r\n            if (neighbor55 !== null) {\r\n              if (neighbor55[2] === 255) {\r\n                count2 = count2 + 1;\r\n              }\r\n            }\r\n            if (neighbor66 !== null) {\r\n              if (neighbor66[2] === 255) {\r\n                count2 = count2 + 1;\r\n              }\r\n            }\r\n            if (neighbor77 !== null) {\r\n              if (neighbor77[2] === 255) {\r\n                count2 = count2 + 1;\r\n              }\r\n            }\r\n            if (neighbor88 !== null) {\r\n              if (neighbor88[2] === 255) {\r\n                count2 = count2 + 1;\r\n              }\r\n            }\r\n\r\n            if (count2 === 3) {\r\n              nextGenLives.push({ x: xCheck, y: yCheck });\r\n            }\r\n          }\r\n        }\r\n      }\r\n      nextGeneration(nextGenDies, nextGenLives);\r\n    }\r\n\r\n    function nextGeneration(nextGenDies, nextGenLives) {\r\n      nextGenDies.map(cell => {\r\n        ctx.clearRect(cell.x, cell.y, 3, 3);\r\n      });\r\n      nextGenLives.map(cell => {\r\n        ctx.fillRect(cell.x, cell.y, 3, 3);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(\"state\", this.state);\r\n    return (\r\n      <div>\r\n        <div className=\"title\">\r\n          <h1>Conway's Game of Life</h1>\r\n        </div>\r\n        <div className=\"canvas-presets\">\r\n          <div className=\"canvas\">\r\n            <canvas\r\n              ref=\"canvas\"\r\n              width={1000}\r\n              height={1000}\r\n              onClick={this.mouseDown}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Presets\r\n              onClickPresetSave={this.onClickPresetSave}\r\n              onClickPreset1={this.onClickPreset1}\r\n              onClickPreset2={this.onClickPreset2}\r\n              onClickPreset3={this.onClickPreset3}\r\n              onClickClearPreset1={this.onClickClearPreset1}\r\n              onClickClearPreset2={this.onClickClearPreset2}\r\n              onClickClearPreset3={this.onClickClearPreset3}\r\n              />\r\n              <div className=\"random-body\">\r\n                <Random\r\n                  onClickRandom={this.onClickRandom}>\r\n                </Random>\r\n              </div>\r\n              <div>\r\n                <Speed\r\n                  tempSpeed={this.state.tempSpeed}\r\n                  inputHandler={this.inputHandler}\r\n                  onUpdateHandler={this.onUpdateHandler}\r\n                />\r\n              </div>\r\n              <div className=\"generation-body\">\r\n                  Generation: {this.state.generationNumber}\r\n              </div>\r\n              <div className=\"speedtext-body\">\r\n                  Speed (ms): {this.state.speed}\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n            <Buttons\r\n              onClickStart={this.onClickStart}\r\n              onClickStop={this.onClickStop}\r\n              onClickClear={this.onClickClear}\r\n            />\r\n        </div>\r\n        <div className=\"howto\">\r\n            <h2>Instructions:</h2>\r\n            <p>Begin by clicking on cells to indicate if they are alive or dead. You may also click on the Random button to generate a random pattern. The system defaults to one generation per second. You may change this by entering a new speed in milleseconds.</p>\r\n            <p>Start: Begins the lifecycle.</p>\r\n            <p>Stop: Pauses the lifecycle. You will need to stop if you want to change the speed.</p>\r\n            <p>Clear: Kills all generations and sets the speed back to 1 second.</p>\r\n            <p>Presets: Clicking \"Save Preset\" will load the current pattern into the next available preset. If all presets are full, then the pattern will not save.</p>\r\n            <p>Clear Preset: You may clear space in any individaul preset.</p>\r\n        </div>\r\n        <div>\r\n            <h2>Rules:</h2>\r\n            <li>Any live cell with fewer than two live neighbours dies, as if caused by underpopulation.</li>\r\n            <li>Any live cell with two or three live neighbours lives on to the next generation.</li>\r\n            <li>Any live cell with more than three live neighbours dies, as if by overpopulation.</li>\r\n            <li>Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.</li>\r\n        </div>\r\n        <div className=\"about\">\r\n            <h2>About this Algorithm:</h2>\r\n            <p>First created in 1970 by the British mathematician, John Horton Conway, \r\n                \"Conway's Game of Life\" provides a platform for studying and better understanding \r\n                the cellular atomaton model. The system has been widely studied throughout the years, \r\n                and patterns continue to be discovered. Most notably, in 2010, Andrew J. Wade built a self-replicating \r\n                structure, named Gemini, that replicates a child, which then consumes the parent. </p>\r\n            <p>It is also important to note that Conway's Game of Life provides a system that is Turing complete in that\r\n                the world of structures that exist within it can be used to create computational structures that function\r\n                like a computer. More can be found \r\n             <a target=\"_blank\" href='https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life'> here.</a>\r\n             </p>\r\n        </div>\r\n      </div>\r\n    );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Canvas from './components/Canvas';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n  constructor(){\r\n    super(); \r\n    this.state = {\r\n      'pixels': [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16], \r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <Canvas></Canvas>\r\n      </div>\r\n    );\r\n  }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}